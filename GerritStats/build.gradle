dependencies {
    compile group: 'joda-time', name: 'joda-time', version: '2.8.2'
    compile group: 'com.beust', name: 'jcommander', version: '1.48'
    compile group: 'com.beust', name: 'jcommander', version: '1.48'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    compile project(':GerritCommon')
}

jar {
    manifest {
        attributes 'Main-Class': 'com.holmsted.gerrit.GerritStatsMain'
    }

    // Include dependencies in JAR file (see http://stackoverflow.com/a/3450409/639421).
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }

    task generateResourceFileListing() << {
        assert sourceSets.main.resources.srcDirs.size() == 1;

        java.io.StringWriter filenameListWriter = new StringWriter();

        File baseDir = sourceSets.main.resources.srcDirs.iterator().next();
        String basePathName = baseDir.absolutePath;

        Stack<File> fileStack = new Stack<>();
        fileStack.add(baseDir);
        while (!fileStack.isEmpty()) {
            File file = fileStack.pop();
            if (file.isDirectory()) {
                fileStack.addAll(file.listFiles());
            } else if (file.isFile() && !file.isHidden()) {
                String relPath = file.absolutePath.substring(basePathName.length() + 1);
                filenameListWriter.write(relPath + '\n');
            }
        }

        java.io.FileWriter fileWriter = new FileWriter(basePathName + "/resList.js");
        fileWriter.write(filenameListWriter.toString());
        fileWriter.close();
    }

    processResources.dependsOn generateResourceFileListing
}
